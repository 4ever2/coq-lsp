(executable
 (name coq_lsp_worker)
 (modes js)
 (preprocess
  (pps js_of_ocaml-ppx))
 (js_of_ocaml
  (javascript_files
   js_stub/mutex.js
   js_stub/unix.js
   js_stub/coq_vm.js
   js_stub/coq_perf.js
   js_stub/interrupt.js
   marshal-arch.js)
  (flags
   :standard
   --dynlink
   +dynlink.js
   ; (:include .extraflags)
   ; +toplevel.js
   ; --enable
   ; with-js-error
   ; --enable
   ; debuginfo
   ; --no-inline
   ; --debug-info
   ; --source-map
   ; no coq-fs yet
   ; --file=coq-fs
   --setenv
   PATH=/bin))
 (link_flags -linkall -no-check-prims)
 ; The old makefile set: -noautolink -no-check-prims
 (libraries zarith_stubs_js yojson controller))

(rule
 (target coq_lsp_worker.bc.cjs)
 (mode promote)
 (action
  (copy coq_lsp_worker.bc.js coq_lsp_worker.bc.cjs)))

(rule
 (targets marshal-arch.js)
 ; This is to inject the dep of a FS on the executable if we want.
 ; (deps coq-fs)
 (action
  (copy js_stub/marshal%{ocaml-config:word_size}.js %{targets})))

; Set debug flags if JSCOQ_DEBUG environment variable is set.
; (ugly, but there are no conditional expressions in Dune)

(rule
 (targets .extraflags)
 (deps
  (env_var JSCOQ_DEBUG))
 (action
  (with-stdout-to
   %{targets}
   (bash
    "echo '(' ${JSCOQ_DEBUG+ --pretty --noinline --disable shortvar --debug-info} ')'"))))
